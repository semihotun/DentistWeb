<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPI</name>
    </assembly>
    <members>
        <member name="T:WebAPI.Controllers.AppointmentTimesController">
            <summary>
            AppointmentTimes If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.AppointmentTimesController.GetList">
            <summary>
            List AppointmentTimes
            </summary>
            <remarks>AppointmentTimes</remarks>
            <return>List AppointmentTimes</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.AppointmentTimesController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>AppointmentTimes</remarks>
            <return>AppointmentTimes List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.AppointmentTimesController.Add(Business.Handlers.AppointmentTimes.Commands.CreateAppointmentTimeCommand)">
            <summary>
            Add AppointmentTime.
            </summary>
            <param name="createAppointmentTime"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.AppointmentTimesController.Update(Business.Handlers.AppointmentTimes.Commands.UpdateAppointmentTimeCommand)">
            <summary>
            Update AppointmentTime.
            </summary>
            <param name="updateAppointmentTime"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.AppointmentTimesController.Delete(Business.Handlers.AppointmentTimes.Commands.DeleteAppointmentTimeCommand)">
            <summary>
            Delete AppointmentTime.
            </summary>
            <param name="deleteAppointmentTime"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.AuthController">
            <summary>
            Make it Authorization operations
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Dependency injection is provided by constructor injection.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.Login(Business.Handlers.Authorizations.Queries.LoginUserQuery)">
            <summary>
            Make it User Login operations
            </summary>
            <param name="loginModel"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.Register(Business.Handlers.Authorizations.Commands.RegisterUserCommand)">
            <summary>
             Make it User Register operations
            </summary>
            <param name="createUser"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.ForgotPassword(Business.Handlers.Authorizations.Commands.ForgotPasswordCommand)">
            <summary>
            Make it Forgot Password operations
            </summary>
            <remarks>tckimlikno</remarks>
            <return></return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.ChangeUserPassword(Business.Handlers.Users.Commands.UserChangePasswordCommand)">
            <summary>
            Make it Change Password operation
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.Verification(Business.Handlers.Authorizations.Queries.VerifyCidQuery)">
            <summary>
            Mobile Login
            </summary>
            <param name="verifyCid"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.AuthController.LoginTest">
            <summary>
            Token decode test
            </summary>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.BaseApiController">
            <summary>
            Base controller
            </summary>
        </member>
        <member name="P:WebAPI.Controllers.BaseApiController.Mediator">
            <summary>
            It is for getting the Mediator instance creation process from the base controller.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Success``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Success``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Created``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Created``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.NoContent``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.NoContent``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.BadRequest``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.BadRequest``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Unauthorized``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Unauthorized``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Forbidden``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Forbidden``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.NotFound``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.NotFound``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Error``1(System.String,System.String,``0)">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="message"></param>
             <param name="internalMessage"></param>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.BaseApiController.Error``1(Core.Utilities.Results.ApiResult{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.CurrenciesController">
            <summary>
            Currencies If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.CurrenciesController.GetCurrencyLookUp">
            <summary>
            Get Currencies Select List
            </summary>
            <remarks>Currencies</remarks>
            <return>List Currencies Select Item</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.CurrenciesController.GetList">
            <summary>
            List Currencies
            </summary>
            <remarks>Currencies</remarks>
            <return>List Currencies</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.CurrenciesController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>Currencies</remarks>
            <return>Currencies List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.CurrenciesController.Add(Business.Handlers.Currencies.Commands.CreateCurrencyCommand)">
            <summary>
            Add Currency.
            </summary>
            <param name="createCurrency"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.CurrenciesController.Update(Business.Handlers.Currencies.Commands.UpdateCurrencyCommand)">
            <summary>
            Update Currency.
            </summary>
            <param name="updateCurrency"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.CurrenciesController.Delete(Business.Handlers.Currencies.Commands.DeleteCurrencyCommand)">
            <summary>
            Delete Currency.
            </summary>
            <param name="deleteCurrency"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.DiseasesController">
            <summary>
            Diseases If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.DiseasesController.GetDiseaseLookUp">
            <summary>
            Disease Dropdown
            </summary>
            <remarks>Diseases</remarks>
            <return>DropDown Diseases</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.DiseasesController.GetList">
            <summary>
            List Diseases
            </summary>
            <remarks>Diseases</remarks>
            <return>List Diseases</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.DiseasesController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>Diseases</remarks>
            <return>Diseases List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.DiseasesController.Add(Business.Handlers.Diseases.Commands.CreateDiseaseCommand)">
            <summary>
            Add Disease.
            </summary>
            <param name="createDisease"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.DiseasesController.Update(Business.Handlers.Diseases.Commands.UpdateDiseaseCommand)">
            <summary>
            Update Disease.
            </summary>
            <param name="updateDisease"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.DiseasesController.Delete(Business.Handlers.Diseases.Commands.DeleteDiseaseCommand)">
            <summary>
            Delete Disease.
            </summary>
            <param name="deleteDisease"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.DoctorsController">
            <summary>
            Doctors If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.DoctorsController.GetPagedList(Core.Utilities.Pagedlist.PagedListFilterModel)">
            <summary>
            PagedList Logs
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.DoctorsController.GetList">
            <summary>
            List Doctors
            </summary>
            <remarks>Doctors</remarks>
            <return>List Doctors</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.DoctorsController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>Doctors</remarks>
            <return>Doctors List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.DoctorsController.Add(Business.Handlers.Doctors.Commands.CreateDoctorCommand)">
            <summary>
            Add Doctor.
            </summary>
            <param name="createDoctor"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.DoctorsController.Update(Business.Handlers.Doctors.Commands.UpdateDoctorCommand)">
            <summary>
            Update Doctor.
            </summary>
            <param name="updateDoctor"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.DoctorsController.Delete(Business.Handlers.Doctors.Commands.DeleteDoctorCommand)">
            <summary>
            Delete Doctor.
            </summary>
            <param name="deleteDoctor"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.DoctorTypesController">
            <summary>
            DoctorTypes If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.DoctorTypesController.GetDoctorTypeLookUp">
            <summary>
            Get doctor type Select List
            </summary>
            <remarks>DoctorTypeLookup</remarks>
            <return>List doctor types Select Item</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.DoctorTypesController.GetList">
            <summary>
            List DoctorTypes
            </summary>
            <remarks>DoctorTypes</remarks>
            <return>List DoctorTypes</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.DoctorTypesController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>DoctorTypes</remarks>
            <return>DoctorTypes List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.DoctorTypesController.Add(Business.Handlers.DoctorTypes.Commands.CreateDoctorTypeCommand)">
            <summary>
            Add DoctorType.
            </summary>
            <param name="createDoctorType"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.DoctorTypesController.Update(Business.Handlers.DoctorTypes.Commands.UpdateDoctorTypeCommand)">
            <summary>
            Update DoctorType.
            </summary>
            <param name="updateDoctorType"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.DoctorTypesController.Delete(Business.Handlers.DoctorTypes.Commands.DeleteDoctorTypeCommand)">
            <summary>
            Delete DoctorType.
            </summary>
            <param name="deleteDoctorType"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.GridSettingsesController">
            <summary>
            GridSettingses If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.GridSettingsesController.GetById(System.String)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>GridSettingses</remarks>
            <return>GridSettingses List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.GridSettingsesController.Add(Business.Handlers.GridSettingses.Commands.CreateGridSettingsCommand)">
            <summary>
            Add GridSettings.
            </summary>
            <param name="createGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.GridSettingsesController.Update(Business.Handlers.GridSettingses.Commands.UpdateGridSettingsCommand)">
            <summary>
            Update GridSettings.
            </summary>
            <param name="updateGridSettings"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.GridSettingsesController.Delete(Business.Handlers.GridSettingses.Commands.DeleteGridSettingsCommand)">
            <summary>
            Delete GridSettings.
            </summary>
            <param name="deleteGridSettings"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.GroupClaimsController">
             <summary>
            
             </summary>
            
        </member>
        <member name="M:WebAPI.Controllers.GroupClaimsController.GetList">
            <summary>
            GroupClaims list
            </summary>
            <remarks>GroupClaims</remarks>
            <return>GroupClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.GroupClaimsController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>GroupClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.GroupClaimsController.GetGroupClaimsByGroupId(System.Int32)">
            <summary>
            Brings up Claims by Group Id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>GroupClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.GroupClaimsController.Add(Business.Handlers.GroupClaims.Commands.CreateGroupClaimCommand)">
            <summary>
            Addded GroupClaim .
            </summary>
            <param name="createGroupClaim"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.GroupClaimsController.Update(Business.Handlers.GroupClaims.Commands.UpdateGroupClaimCommand)">
            <summary>
            Update GroupClaim.
            </summary>
            <param name="updateGroupClaim"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.GroupClaimsController.Delete(Business.Handlers.GroupClaims.Commands.DeleteGroupClaimCommand)">
            <summary>
            Delete GroupClaim.
            </summary>
            <param name="deleteGroupClaim"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.GroupsController">
             <summary>
             If controller methods will not be Authorize, [AllowAnonymous] is used.
             </summary>
            
        </member>
        <member name="M:WebAPI.Controllers.GroupsController.GetList">
            <summary>
            List Groups
            </summary>
            <remarks>bla bla bla Groups</remarks>
            <return>Grup List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.GroupsController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>Grup List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.GroupsController.Getselectedlist">
            <summary>
            Group Lookup
            </summary>
            <remarks>Group Lookup döner </remarks>
            <return>Grup Lokup</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.GroupsController.Add(Business.Handlers.Groups.Commands.CreateGroupCommand)">
            <summary>
            Add Group .
            </summary>
            <param name="createGroup"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.GroupsController.Update(Business.Handlers.Groups.Commands.UpdateGroupCommand)">
            <summary>
            Update Group.
            </summary>
            <param name="updateGroup"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.GroupsController.Delete(Business.Handlers.Groups.Commands.DeleteGroupCommand)">
            <summary>
            Delete Group.
            </summary>
            <param name="deleteGroup"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.LanguagesController">
            <summary>
            If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.GetLookupListWithCode">
            <summary>
            LanguageLookUp with Code
            </summary>
            <remarks>bla bla bla Languages</remarks>
            <return>Languages List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.GetLookupList">
            <summary>
            LanguageLookUp
            </summary>
            <remarks>bla bla bla Languages</remarks>
            <return>Languages List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.GetList">
            <summary>
            List languages
            </summary>
            <remarks>bla bla bla Languages</remarks>
            <return>Languages List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>Language List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.Add(Business.Handlers.Languages.Commands.CreateLanguageCommand)">
            <summary>
            Add Language.
            </summary>
            <param name="createLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.Update(Business.Handlers.Languages.Commands.UpdateLanguageCommand)">
            <summary>
            Update Language.
            </summary>
            <param name="updateLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.LanguagesController.Delete(Business.Handlers.Languages.Commands.DeleteLanguageCommand)">
            <summary>
            Delete Language.
            </summary>
            <param name="deleteLanguage"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.LogsController">
            <summary>
            If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.LogsController.GetList">
            <summary>
            List Logs
            </summary>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.LogsController.GetPagedList(Core.Utilities.Pagedlist.PagedListFilterModel)">
            <summary>
            PagedList Logs
            </summary>
            <response code="200"></response>
        </member>
        <member name="T:WebAPI.Controllers.OperationClaimsController">
             <summary>
             If controller methods will not be Authorize, [AllowAnonymous] is used.
             </summary>
            
        </member>
        <member name="M:WebAPI.Controllers.OperationClaimsController.GetList">
            <summary>
            List OperationClaims
            </summary>
            <remarks>bla bla bla OperationClaims</remarks>
            <return>OperationClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.OperationClaimsController.GetByid(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla OperationClaims</remarks>
            <return>OperationClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.OperationClaimsController.GetOperationClaimLookup">
            <summary>
            List OperationClaims
            </summary>
            <remarks>bla bla bla OperationClaims</remarks>
            <return>OperationClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.OperationClaimsController.Update(Business.Handlers.OperationClaims.Commands.UpdateOperationClaimCommand)">
            <summary>
            Update OperationClaim .
            </summary>
            <param name="updateOperationClaim"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.OperationClaimsController.GetUserClaimsFromCache">
            <summary>
            List OperationClaims
            </summary>
            <remarks>bla bla bla OperationClaims</remarks>
            <return>OperationClaims List</return>
            <response code="200"></response>
        </member>
        <member name="T:WebAPI.Controllers.PatientOperationsController">
            <summary>
            PatientOperations If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.PatientOperationsController.GetPatientOperationDTOByPatientId(System.Int32)">
            <summary>
            List PatientOperations DTO
            </summary>
            <remarks>PatientOperations DTO</remarks>
            <return>List PatientOperations DTO</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.PatientOperationsController.GetList">
            <summary>
            List PatientOperations
            </summary>
            <remarks>PatientOperations</remarks>
            <return>List PatientOperations</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.PatientOperationsController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>PatientOperations</remarks>
            <return>PatientOperations List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.PatientOperationsController.Add(Business.Handlers.PatientOperations.Commands.CreatePatientOperationCommand)">
            <summary>
            Add PatientOperation.
            </summary>
            <param name="createPatientOperation"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.PatientOperationsController.Update(Business.Handlers.PatientOperations.Commands.UpdatePatientOperationCommand)">
            <summary>
            Update PatientOperation.
            </summary>
            <param name="updatePatientOperation"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.PatientOperationsController.Delete(Business.Handlers.PatientOperations.Commands.DeletePatientOperationCommand)">
            <summary>
            Delete PatientOperation.
            </summary>
            <param name="deletePatientOperation"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.PatientsController">
            <summary>
            Patients If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.PatientsController.GetList">
            <summary>
            List Patients
            </summary>
            <remarks>Patients</remarks>
            <return>List Patients</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.PatientsController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>Patients</remarks>
            <return>Patients List</return>
            <response code="200"></response>  
        </member>
        <member name="M:WebAPI.Controllers.PatientsController.Add(Business.Handlers.Patients.Commands.CreatePatientCommand)">
            <summary>
            Add Patient.
            </summary>
            <param name="createPatient"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.PatientsController.Update(Business.Handlers.Patients.Commands.UpdatePatientCommand)">
            <summary>
            Update Patient.
            </summary>
            <param name="updatePatient"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.PatientsController.Delete(Business.Handlers.Patients.Commands.DeletePatientCommand)">
            <summary>
            Delete Patient.
            </summary>
            <param name="deletePatient"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.TranslatesController">
            <summary>
            If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.GetTranslatesByLang(System.String)">
            <summary>
            Get translates by lang
            </summary>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.GetList">
            <summary>
            List Translate
            </summary>
            <remarks>bla bla bla Translates</remarks>
            <return>Translates List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.GetTranslateListDto">
            <summary>
            List Dto Translate
            </summary>
            <remarks>bla bla bla Translates</remarks>
            <return>Translates List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>Translate List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.Add(Business.Handlers.Translates.Commands.CreateTranslateCommand)">
            <summary>
            Add Translate.
            </summary>
            <param name="createTranslate"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.Update(Business.Handlers.Translates.Commands.UpdateTranslateCommand)">
            <summary>
            Update Translate.
            </summary>
            <param name="updateTranslate"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.TranslatesController.Delete(Business.Handlers.Translates.Commands.DeleteTranslateCommand)">
            <summary>
            Delete Translate.
            </summary>
            <param name="deleteTranslate"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.UserClaimsController">
             <summary>
             If controller methods will not be Authorize, [AllowAnonymous] is used.
             </summary>
            
        </member>
        <member name="M:WebAPI.Controllers.UserClaimsController.GetList">
            <summary>
            List UserClaims
            </summary>
            <remarks>bla bla bla UserClaims</remarks>
            <return>UserClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UserClaimsController.GetByUserId(System.Int32)">
            <summary>
            Id sine göre detaylarını getirir.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>UserClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UserClaimsController.GetOperationClaimByUserId(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>UserClaims List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UserClaimsController.Add(Business.Handlers.UserClaims.Commands.CreateUserClaimCommand)">
            <summary>
            Add GroupClaim.
            </summary>
            <param name="createUserClaim"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserClaimsController.Update(Business.Handlers.UserClaims.Commands.UpdateUserClaimCommand)">
            <summary>
            Update GroupClaim.
            </summary>
            <param name="updateUserClaim"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserClaimsController.Delete(Business.Handlers.UserClaims.Commands.DeleteUserClaimCommand)">
            <summary>
            Delete GroupClaim.
            </summary>
            <param name="deleteUserClaim"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.UserGroupsController">
             <summary>
             If controller methods will not be Authorize, [AllowAnonymous] is used.
             </summary>
            
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.GetList">
            <summary>
            List UserGroup
            </summary>
            <remarks>bla bla bla UserGroups</remarks>
            <return>Kullanıcı Grup List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.GetByUserId(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.GetGroupClaimsByUserId(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>UserGroups List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.GetUsersInGroupByGroupid(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>UserGroups List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.Add(Business.Handlers.UserGroups.Commands.CreateUserGroupCommand)">
            <summary>
            Add UserGroup.
            </summary>
            <param name="createUserGroup"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.Update(Business.Handlers.UserGroups.Commands.UpdateUserGroupCommand)">
            <summary>
            Update UserGroup.
            </summary>
            <param name="updateUserGroup"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.UpdateByGroupId(Business.Handlers.UserGroups.Commands.UpdateUserGroupByGroupIdCommand)">
            <summary>
            Update UserGroup by Id.
            </summary>
            <param name="updateUserGroup"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UserGroupsController.Delete(Business.Handlers.UserGroups.Commands.DeleteUserGroupCommand)">
            <summary>
            Delete UserGroup.
            </summary>
            <param name="deleteUserGroup"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.Controllers.UsersController">
            <summary>
            If controller methods will not be Authorize, [AllowAnonymous] is used.
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.UsersController.GetList">
            <summary>
            List Users
            </summary>
            <remarks>bla bla bla Users</remarks>
            <return>Users List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UsersController.GetUserLookup">
            <summary>
            User Lookup
            </summary>
            <remarks>bla bla bla Users</remarks>
            <return>Users List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UsersController.GetById(System.Int32)">
            <summary>
            It brings the details according to its id.
            </summary>
            <remarks>bla bla bla </remarks>
            <return>Users List</return>
            <response code="200"></response>
        </member>
        <member name="M:WebAPI.Controllers.UsersController.Add(Business.Handlers.Users.Commands.CreateUserCommand)">
            <summary>
            Add User.
            </summary>
            <param name="createUser"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UsersController.Update(Business.Handlers.Users.Commands.UpdateUserCommand)">
            <summary>
            Update User.
            </summary>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.UsersController.Delete(Business.Handlers.Users.Commands.DeleteUserCommand)">
            <summary>
            Delete User.
            </summary>
            <param name="deleteUser"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPI.EntityBaseOverride.OverrideBase">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebAPI.EntityBaseOverride.OverrideBase.#ctor(Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator,Microsoft.EntityFrameworkCore.Design.ICSharpHelper)">
             <summary>
            
             </summary>
             <param name="annotationCodeGenerator"></param>
             <param name="cSharpHelper"></param>
        </member>
        <member name="M:WebAPI.EntityBaseOverride.OverrideBase.WriteCode(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String,System.Boolean)">
             <summary>
            
             </summary>
             <param name="entityType"></param>
             <param name="namespace"></param>
             <param name="useDataAnnotations"></param>
             <returns></returns>
        </member>
        <member name="T:WebAPI.EntityBaseOverride.ServiceInjection">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebAPI.EntityBaseOverride.ServiceInjection.ConfigureDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            
             </summary>
             <param name="serviceCollection"></param>
        </member>
        <member name="T:WebAPI.Program">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebAPI.Program.Main(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:WebAPI.Program.CreateHostBuilder(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="T:WebAPI.Startup">
             <summary>
            
             </summary>
        </member>
        <member name="M:WebAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Hosting.IHostEnvironment)">
             <summary>
            
             </summary>
             <param name="configuration"></param>
             <param name="hostEnvironment"></param>
        </member>
        <member name="M:WebAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <remarks>
            It is common to all configurations and must be called. Aspnet core does not call this method because there are other methods.
            </remarks>
            <param name="services"></param>
        </member>
        <member name="M:WebAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
